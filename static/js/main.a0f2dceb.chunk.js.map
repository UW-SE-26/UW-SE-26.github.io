{"version":3,"sources":["charts/LineChart.js","charts/VerticalBarChart.js","charts/HorizontalBarChart.js","charts/VerticalMultiBarChart.js","charts/HorizontalMultiBarChart.js","charts/WeightedScatterPlot.js","charts/NumberLineChart.js","charts/BoxAndWhiskerPlot.js","charts/PieChart.js","data.js","pages/AboutPage.js","components/Header.js","pages/DemographicsPage.js","pages/HousingPage.js","pages/SexDrugsPage.js","pages/AcademicsPage.js","pages/MiscPage.js","App.js","reportWebVitals.js","index.js"],"names":["LineChart","props","useState","crosshairValues","setCrosshairValues","height","width","onMouseLeave","data","onNearestX","value","index","x","map","d","y","values","VerticalBarChart","xType","HorizontalBarChart","yType","VerticalMultiBarChart","stackBy","HorizontalMultiBarChart","WeightedScatterPlot","className","opacity","sizeRange","NumberLineChart","rawdata","totalLabels","length","totalRecords","i","seperation","FormattedArray","LabelsArray","tX","newX","push","x0","y0","label","style","fontSize","arrayToUse","labelAnchorX","BoxAndWhiskerPlot","barThickness","plotMaxY","MainRectSeriesArray","WhiskerSeriesArray","MedianRectSeriesArray","LabelSeriesArray","workingList","sort","a","b","workingListLength","medianIndex","upperLimit","lowerLimit","lowerHalf","slice","upperHalf","findMedian","ar","halfLocation","median","lowerQuartile","upperQuartile","minValue","maxValue","whiskerlocation","whiskerVariance","overallMedian","yVariance","xDomain","yDomain","hideTicks","color","PieChart","data_example_line","data_example_weighted_scatterplot","size","data_example_vertical_bar","data_example_horizontal_bar","data_example_vertical_multibar","data_example_horizontal_multibar","data_example_numberlinechart","data_example_box_and_whisker_plot","data_example_pie_chart","angle","AboutPage","Header","class","page","to","toLowerCase","replace","activeClassName","DemographicsPage","HousingPage","SexDrugsPage","AcademicsPage","MiscPage","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRA0CeA,MA/Bf,SAAmBC,GAAQ,IAAD,EACsBC,mBAAS,IAD/B,mBACjBC,EADiB,KACAC,EADA,KAGxB,OACE,8BACE,eAAC,IAAD,CACEC,OAAQ,IACRC,MAAO,IACPC,aAAc,kBAAMH,EAAmB,KAHzC,UAKE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CACEI,KAAMP,EAAMO,KACZC,WAAY,SAACC,EAAD,OAAUC,EAAV,EAAUA,MAAV,OACVP,EAAmB,CACjB,CACEQ,EAAGX,EAAMO,KAAKK,KAAI,SAACC,GAAD,OAAOA,EAAC,KAAOH,GACjCI,EAAGd,EAAMO,KAAKK,KAAI,SAACC,GAAD,OAAOA,EAAC,KAAOH,SAKzC,cAAC,IAAD,CAAWK,OAAQb,UCOZc,MAhCf,SAA0BhB,GAAQ,IAAD,EACeC,mBAAS,IADxB,mBACxBC,EADwB,KACPC,EADO,KAG/B,OACE,8BACE,eAAC,IAAD,CACEC,OAAQ,IACRC,MAAO,IACPY,MAAM,UACNX,aAAc,kBAAMH,EAAmB,KAJzC,UAME,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CACEI,KAAMP,EAAMO,KACZC,WAAY,SAACC,EAAD,OAAUC,EAAV,EAAUA,MAAV,OACVP,EAAmB,CACjB,CACEQ,EAAGX,EAAMO,KAAKK,KAAI,SAACC,GAAD,OAAOA,EAAC,KAAOH,GACjCI,EAAGd,EAAMO,KAAKK,KAAI,SAACC,GAAD,OAAOA,EAAC,KAAOH,SAKzC,cAAC,IAAD,CAAWK,OAAQb,UCbZgB,MAdf,SAA4BlB,GAC1B,OACE,8BACE,eAAC,IAAD,CAAQI,OAAQ,IAAKC,MAAO,IAAKc,MAAM,UAAvC,UACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAqBZ,KAAMP,EAAMO,aCgB1Ba,MAvBf,SAA+BpB,GAAQ,IAAD,EACUC,mBAAS,IADnB,mBAC7BC,EAD6B,KACZC,EADY,KAGpC,OACE,8BACE,eAAC,IAAD,CAAQE,MAAO,IAAKD,OAAQ,IAAKiB,QAAQ,IAAIJ,MAAM,UAAnD,UACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CACEV,KAAMP,EAAMO,KAAK,GACjBC,WAAY,SAACC,EAAD,OAAUC,EAAV,EAAUA,MAAV,OACVP,EAAmBH,EAAMO,KAAKK,KAAI,SAACC,GAAD,OAAOA,EAAEH,UAG/C,cAAC,IAAD,CAAmBH,KAAMP,EAAMO,KAAK,KACpC,cAAC,IAAD,CAAWQ,OAAQb,UCHZoB,MAff,SAAiCtB,GAC/B,OACE,8BACE,eAAC,IAAD,CAAQK,MAAO,IAAKD,OAAQ,IAAKiB,QAAQ,IAAIF,MAAM,UAAnD,UACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAqBZ,KAAMP,EAAMO,KAAK,KACtC,cAAC,IAAD,CAAqBA,KAAMP,EAAMO,KAAK,WCsB/BgB,MA9Bf,SAA6BvB,GAAQ,IAAD,EACYC,mBAAS,IADrB,mBAC3BC,EAD2B,KACVC,EADU,KAGlC,OACE,8BACE,eAAC,IAAD,CAAQE,MAAO,IAAKD,OAAQ,IAA5B,UACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CACEoB,UAAU,uBACVC,QAAQ,MACRC,UAAW,CAAC,EAAG,IACfnB,KAAMP,EAAMO,KACZC,WAAY,SAACC,EAAD,OAAUC,EAAV,EAAUA,MAAV,OACVP,EAAmB,CACjB,CACEQ,EAAGX,EAAMO,KAAKK,KAAI,SAACC,GAAD,OAAOA,EAAC,KAAOH,GACjCI,EAAGd,EAAMO,KAAKK,KAAI,SAACC,GAAD,OAAOA,EAAC,KAAOH,SAKzC,cAAC,IAAD,CAAWK,OAAQb,UC8BZyB,MAzDf,SAAyB3B,GASvB,IAT+B,IAAD,EACgBC,mBAAS,IADzB,mBACvBC,EADuB,KACNC,EADM,KAIxByB,EAAU5B,EAAMO,KAChBsB,EAAcD,EAAQE,OAGxBC,EAAe,EACVC,EAAI,EAAGA,EAAIH,EAAaG,IAC/BD,GAA8BH,EAAQI,GAAR,EAQhC,IANA,IAAMC,EAAaF,EAAe,GAG9BG,EAAiB,GACjBC,EAAc,GACdC,EAAK,EACAJ,EAAI,EAAGA,EAAIH,EAAaG,IAAK,CACpC,IAAIK,EAAOD,EAAKR,EAAQI,GAAR,EAChBE,EAAeI,KAAK,CAAEC,GAAIH,EAAIzB,EAAG0B,EAAMG,GAAI,EAAG1B,EAAG,KACjDqB,EAAYG,KAAK,CACf3B,GAAIyB,EAAKC,GAAQ,EACjBvB,GAAI,EACJ2B,MAAOb,EAAQI,GAAR,EACPU,MAAO,CAAEC,SAAU,MAErBP,EAAKC,EAAOJ,EAGd,IAAMW,EAAaV,EAEnB,OACE,8BACE,eAAC,IAAD,CACE9B,OAAQ,IACRC,MAAO,IACPC,aAAc,kBAAMH,EAAmB,KAHzC,UAKE,cAAC,IAAD,CAAaI,KAAM4B,EAAaU,aAAc,WAC9C,cAAC,IAAD,CACEtC,KAAMqC,EACNpC,WAAY,SAACC,EAAD,OAAUC,EAAV,EAAUA,MAAV,OACVP,EAAmB,CACjB,CACEQ,EAAGwB,EAAYvB,KAAI,SAACC,GAAD,OAAOA,EAAC,SAAWH,GACtCI,EAAGc,EAAQhB,KAAI,SAACC,GAAD,OAAOA,EAAC,KAAOH,SAKtC,cAAC,IAAD,CAAWK,OAAQb,UCiFZ4C,MA/Hf,SAA2B9C,GAkBzB,IAlBiC,IAAD,EACcC,mBAAS,IADvB,mBACzBC,EADyB,KACRC,EADQ,KAI1ByB,EAAU5B,EAAMO,KAChBsB,EAAcD,EAAQE,OAGtBiB,EAAe,IACfd,EAAac,EAAe,EAE9BC,EAAW,EAEXZ,EAAKH,EACLgB,EAAsB,GACtBC,EAAqB,GACrBC,EAAwB,GACxBC,EAAmB,GACdpB,EAAI,EAAGA,EAAIH,EAAaG,IAAK,CACpC,IAAIK,EAAOD,EAAKW,EAGZM,EAAczB,EAAQI,GAAR,EAAgBsB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KACjDC,EAAoBJ,EAAYvB,OAChC4B,EAAcD,EAAoB,EAEtC,GAAIC,EAAc,IAAM,EACtB,IAAIC,EAAaD,EAAc,GAC3BE,EAAaF,EAAc,QAE3BC,EAAaD,EACbE,EAAaF,EAEnB,IAAIG,EAAYR,EAAYS,MAAM,EAAGH,EAAa,GAC9CI,EAAYV,EAAYS,MAAMF,EAAYH,GAE9C,SAASO,EAAWC,GAClB,IAAIC,EAAeD,EAAGnC,OAAS,EAC/B,GAAIoC,EAAe,IAAM,EACvB,IAAIC,EAASF,EAAGC,EAAe,SAE3BC,GAAUF,EAAGC,EAAe,GAAKD,EAAGC,IAAiB,EAE3D,OAAOC,EAGT,IAAIC,EAAgBJ,EAAWH,GAC3BQ,EAAgBL,EAAWD,GAG3BO,EAAWjB,EAAY,GACvBkB,EAAWlB,EAAYI,EAAoB,GAC3Ce,GAAmBF,EAAWC,GAAY,EAC1CE,EAAiD,GAA9BD,EAAkBF,GACrCC,EAAWvB,IACbA,EAAWuB,GAIb,IAAIG,EAAgBV,EAAWX,GAG/BJ,EAAoBX,KAAK,CACvBC,GAAIH,EACJzB,EAAG0B,EACHG,GAAI4B,EACJtD,EAAGuD,IAELnB,EAAmBZ,KAAK,CACtB3B,GAAIyB,EAAKC,GAAQ,EACjBvB,EAAG0D,EACHG,UAAWF,IAEbtB,EAAsBb,KAAK,CACzBC,GAAIH,EACJzB,EAAG0B,EACHG,GAAIkC,EAlEoB,GAmExB5D,EAAG4D,EAnEqB,GAoExBP,OAAQO,IAEVtB,EAAiBd,KAAK,CACpB3B,GAAIyB,EAAKC,GAAQ,EACjBvB,GAAI,IACJ2B,MAAOb,EAAQI,GAAR,EACPU,MAAO,CAAEC,SAAU,MAGrBP,EAAKC,EAAOJ,EAGd,OACE,8BACE,eAAC,IAAD,CACE7B,OAAQ,IACRC,MAAkB,MAAXwB,EACP+C,QAAS,CAAC,EAAG/C,GAA8B,KAAfkB,GAAoC,IAAbd,GACnD4C,QAAS,CAAC,EAAc,IAAX7B,GACb1C,aAAc,kBAAMH,EAAmB,KALzC,UAOE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAO2E,WAAS,IAChB,cAAC,IAAD,IACA,cAAC,IAAD,CAAavE,KAAM6C,EAAkBP,aAAc,WACnD,cAAC,IAAD,CACEtC,KAAM0C,EACNzC,WAAY,SAACC,EAAD,OAAUC,EAAV,EAAUA,MAAV,OACVP,EAAmB,CACjB,CACEQ,EAAGyC,EAAiBxC,KAAI,SAACC,GAAD,OAAOA,EAAC,SAAWH,GAC3CI,EAAGqC,EAAsBvC,KAAI,SAACC,GAAD,OAAOA,EAAC,UAAYH,SAKzD,cAAC,IAAD,CAAoBqE,MAAO,UAAWxE,KAAM4C,IAC5C,cAAC,IAAD,CACE3B,UAAU,yBACVjB,KAAM2C,EACN6B,MAAO,YAET,cAAC,IAAD,CAAWhE,OAAQb,UC3HZ8E,MARf,SAAkBhF,GAChB,OACE,8BACE,cAAC,IAAD,CAAaO,KAAMP,EAAMO,KAAMF,MAAO,IAAKD,OAAQ,IAAKoB,WAAS,OCJjEyD,EAAoB,CACxB,CAAEtE,EAAG,EAAGG,EAAG,GACX,CAAEH,EAAG,EAAGG,EAAG,GACX,CAAEH,EAAG,EAAGG,EAAG,GACX,CAAEH,EAAG,EAAGG,EAAG,GACX,CAAEH,EAAG,EAAGG,EAAG,GACX,CAAEH,EAAG,EAAGG,EAAG,GACX,CAAEH,EAAG,EAAGG,EAAG,GACX,CAAEH,EAAG,EAAGG,EAAG,GACX,CAAEH,EAAG,EAAGG,EAAG,GACX,CAAEH,EAAG,EAAGG,EAAG,IAGPoE,EAAoC,CACxC,CAAEvE,EAAG,EAAGG,EAAG,GAAIqE,KAAM,IACrB,CAAExE,EAAG,IAAKG,EAAG,GAAIqE,KAAM,IACvB,CAAExE,EAAG,EAAGG,EAAG,EAAGqE,KAAM,GACpB,CAAExE,EAAG,EAAGG,EAAG,GAAIqE,KAAM,IACrB,CAAExE,EAAG,IAAKG,EAAG,GAAIqE,KAAM,GACvB,CAAExE,EAAG,IAAKG,EAAG,EAAGqE,KAAM,GACtB,CAAExE,EAAG,IAAKG,EAAG,EAAGqE,KAAM,IACtB,CAAExE,EAAG,IAAKG,EAAG,EAAGqE,KAAM,KAGlBC,EAA4B,CAChC,CAAEzE,EAAG,EAAGG,EAAG,IACX,CAAEH,EAAG,EAAGG,EAAG,GACX,CAAEH,EAAG,EAAGG,EAAG,KAGPuE,EAA8B,CAClC,CAAEvE,EAAG,EAAGH,EAAG,GACX,CAAEG,EAAG,EAAGH,EAAG,GACX,CAAEG,EAAG,EAAGH,EAAG,IACX,CAAEG,EAAG,EAAGH,EAAG,GACX,CAAEG,EAAG,EAAGH,EAAG,KAGP2E,EAAiC,CACrC,CACE,CAAE3E,EAAG,EAAGG,EAAG,IACX,CAAEH,EAAG,EAAGG,EAAG,GACX,CAAEH,EAAG,EAAGG,EAAG,KAEb,CACE,CAAEH,EAAG,EAAGG,EAAG,IACX,CAAEH,EAAG,EAAGG,EAAG,GACX,CAAEH,EAAG,EAAGG,EAAG,MAITyE,EAAmC,CACvC,CACE,CAAEzE,EAAG,EAAGH,EAAG,IACX,CAAEG,EAAG,EAAGH,EAAG,GACX,CAAEG,EAAG,EAAGH,EAAG,KAEb,CACE,CAAEG,EAAG,EAAGH,EAAG,IACX,CAAEG,EAAG,EAAGH,EAAG,GACX,CAAEG,EAAG,EAAGH,EAAG,MAIT6E,EAA+B,CACnC,CAAE7E,EAAG,OAAQG,EAAG,IAChB,CAAEH,EAAG,OAAQG,EAAG,IAChB,CAAEH,EAAG,MAAOG,EAAG,KAGX2E,EAAoC,CACxC,CAAE9E,EAAG,MAAOG,EAAG,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KACvC,CAAEH,EAAG,QAASG,EAAG,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpD,CAAEH,EAAG,OAAQG,EAAG,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KACxC,CAAEH,EAAG,SAAUG,EAAG,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,MAGtC4E,EAAyB,CAC7B,CAAEC,MAAO,EAAGnE,UAAW,WAAYiB,MAAO,YAC1C,CAAEkD,MAAO,EAAGnE,UAAW,WAAYiB,MAAO,YAC1C,CAAEkD,MAAO,EAAGnE,UAAW,WAAYiB,MAAO,aCzC7BmD,MAlBf,WACE,OACE,6CAEE,uDACA,cAAC,EAAD,CAAWrF,KAAM0E,IACjB,cAAC,EAAD,CAAkB1E,KAAM6E,IACxB,cAAC,EAAD,CAAoB7E,KAAM8E,IAC1B,cAAC,EAAD,CAAuB9E,KAAM+E,IAC7B,cAAC,EAAD,CAAyB/E,KAAMgF,IAC/B,cAAC,EAAD,CAAqBhF,KAAM2E,IAC3B,cAAC,EAAD,CAAiB3E,KAAMiF,IACvB,cAAC,EAAD,CAAmBjF,KAAMkF,IACzB,cAAC,EAAD,CAAUlF,KAAMmF,Q,MCdPG,MAlBf,WACI,OACI,yBAAQrE,UAAW,cAAnB,UACI,iDACA,qBAAKsE,MAAO,WACX,CAAC,QAAS,eAAgB,YAAa,UAAW,YAAa,QAAQlF,KAAI,SAACmF,EAAM/D,GAAP,OACxE,cAAC,IAAD,CACIgE,GAAE,yBAAoBD,EAAKE,cAAcC,QAAQ,IAAK,MACtDC,gBAAiB,SACjB3E,UAAW,OAHf,SAKKuE,WCLNK,MARf,WACE,OACE,8BACE,qDCKSC,MARf,WACE,OACE,8BACE,gDCKSC,MARf,WACE,OACE,8BACE,kDCKSC,MARf,WACE,OACE,8BACE,kDCMSC,MATf,WACE,OACE,gCACE,mDADF,2ECoCWC,MA9Bf,WACE,OACE,qBAAKjF,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkF,OAAK,EAACC,KAAM,CAAC,uBAAwB,kBAA5C,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,2BAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,8BAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,2BAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,yBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,sBAAlB,SACE,cAAC,EAAD,eCpBGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a0f2dceb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  Crosshair,\r\n  LineSeries,\r\n} from \"react-vis\";\r\n\r\nfunction LineChart(props) {\r\n  const [crosshairValues, setCrosshairValues] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <XYPlot\r\n        height={300}\r\n        width={300}\r\n        onMouseLeave={() => setCrosshairValues([])}\r\n      >\r\n        <VerticalGridLines />\r\n        <HorizontalGridLines />\r\n        <XAxis />\r\n        <YAxis />\r\n        <LineSeries\r\n          data={props.data}\r\n          onNearestX={(value, { index }) =>\r\n            setCrosshairValues([\r\n              {\r\n                x: props.data.map((d) => d[\"x\"])[index],\r\n                y: props.data.map((d) => d[\"y\"])[index],\r\n              },\r\n            ])\r\n          }\r\n        />\r\n        <Crosshair values={crosshairValues} />\r\n      </XYPlot>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineChart;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  Crosshair,\r\n  VerticalBarSeries,\r\n} from \"react-vis\";\r\n\r\nfunction VerticalBarChart(props) {\r\n  const [crosshairValues, setCrosshairValues] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <XYPlot\r\n        height={300}\r\n        width={300}\r\n        xType=\"ordinal\"\r\n        onMouseLeave={() => setCrosshairValues([])}\r\n      >\r\n        <HorizontalGridLines />\r\n        <VerticalGridLines />\r\n        <XAxis />\r\n        <YAxis />\r\n        <VerticalBarSeries\r\n          data={props.data}\r\n          onNearestX={(value, { index }) =>\r\n            setCrosshairValues([\r\n              {\r\n                x: props.data.map((d) => d[\"x\"])[index],\r\n                y: props.data.map((d) => d[\"y\"])[index],\r\n              },\r\n            ])\r\n          }\r\n        />\r\n        <Crosshair values={crosshairValues} />\r\n      </XYPlot>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VerticalBarChart;\r\n","import React from \"react\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  HorizontalBarSeries,\r\n} from \"react-vis\";\r\n\r\nfunction HorizontalBarChart(props) {\r\n  return (\r\n    <div>\r\n      <XYPlot height={300} width={300} yType=\"ordinal\">\r\n        <VerticalGridLines />\r\n        <HorizontalGridLines />\r\n        <XAxis />\r\n        <YAxis />\r\n        <HorizontalBarSeries data={props.data} />\r\n      </XYPlot>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HorizontalBarChart;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  VerticalBarSeries,\r\n  Crosshair,\r\n} from \"react-vis\";\r\n\r\nfunction VerticalMultiBarChart(props) {\r\n  const [crosshairValues, setCrosshairValues] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <XYPlot width={300} height={300} stackBy=\"y\" xType=\"ordinal\">\r\n        <VerticalGridLines />\r\n        <HorizontalGridLines />\r\n        <XAxis />\r\n        <YAxis />\r\n        <VerticalBarSeries\r\n          data={props.data[0]}\r\n          onNearestX={(value, { index }) =>\r\n            setCrosshairValues(props.data.map((d) => d[index]))\r\n          }\r\n        />\r\n        <VerticalBarSeries data={props.data[1]} />\r\n        <Crosshair values={crosshairValues} />\r\n      </XYPlot>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VerticalMultiBarChart;\r\n","import React from \"react\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  HorizontalBarSeries,\r\n} from \"react-vis\";\r\n\r\nfunction HorizontalMultiBarChart(props) {\r\n  return (\r\n    <div>\r\n      <XYPlot width={300} height={300} stackBy=\"x\" yType=\"ordinal\">\r\n        <VerticalGridLines />\r\n        <HorizontalGridLines />\r\n        <XAxis />\r\n        <YAxis />\r\n        <HorizontalBarSeries data={props.data[0]} />\r\n        <HorizontalBarSeries data={props.data[1]} />\r\n      </XYPlot>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HorizontalMultiBarChart;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  Crosshair,\r\n  MarkSeries,\r\n} from \"react-vis\";\r\n\r\nfunction WeightedScatterPlot(props) {\r\n  const [crosshairValues, setCrosshairValues] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <XYPlot width={300} height={300}>\r\n        <VerticalGridLines />\r\n        <HorizontalGridLines />\r\n        <XAxis />\r\n        <YAxis />\r\n        <MarkSeries\r\n          className=\"weighted-scatterplot\"\r\n          opacity=\"0.6\"\r\n          sizeRange={[5, 15]}\r\n          data={props.data}\r\n          onNearestX={(value, { index }) =>\r\n            setCrosshairValues([\r\n              {\r\n                x: props.data.map((d) => d[\"x\"])[index],\r\n                y: props.data.map((d) => d[\"y\"])[index],\r\n              },\r\n            ])\r\n          }\r\n        />\r\n        <Crosshair values={crosshairValues} />\r\n      </XYPlot>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeightedScatterPlot;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  XYPlot,\r\n  Crosshair,\r\n  VerticalRectSeries,\r\n  LabelSeries,\r\n} from \"react-vis\";\r\n\r\nfunction NumberLineChart(props) {\r\n  const [crosshairValues, setCrosshairValues] = useState([]);\r\n\r\n  //Accept a standard data.js x,y array, make it easier to type\r\n  const rawdata = props.data;\r\n  const totalLabels = rawdata.length;\r\n\r\n  //Total number of respondents and the seperation between blocks\r\n  var totalRecords = 0;\r\n  for (let i = 0; i < totalLabels; i++) {\r\n    totalRecords = totalRecords + rawdata[i][\"y\"];\r\n  }\r\n  const seperation = totalRecords / 50;\r\n\r\n  //Format the Array so that RectSeries can use it, and take out the label for LabelSeries while defining y pos and fontsize\r\n  var FormattedArray = [];\r\n  var LabelsArray = [];\r\n  var tX = 0;\r\n  for (let i = 0; i < totalLabels; i++) {\r\n    var newX = tX + rawdata[i][\"y\"];\r\n    FormattedArray.push({ x0: tX, x: newX, y0: 0, y: 10 });\r\n    LabelsArray.push({\r\n      x: (tX + newX) / 2,\r\n      y: -2,\r\n      label: rawdata[i][\"x\"],\r\n      style: { fontSize: 10 },\r\n    });\r\n    tX = newX + seperation;\r\n  }\r\n\r\n  const arrayToUse = FormattedArray;\r\n\r\n  return (\r\n    <div>\r\n      <XYPlot\r\n        height={150}\r\n        width={450}\r\n        onMouseLeave={() => setCrosshairValues([])}\r\n      >\r\n        <LabelSeries data={LabelsArray} labelAnchorX={\"middle\"} />\r\n        <VerticalRectSeries\r\n          data={arrayToUse}\r\n          onNearestX={(value, { index }) =>\r\n            setCrosshairValues([\r\n              {\r\n                x: LabelsArray.map((d) => d[\"label\"])[index],\r\n                y: rawdata.map((d) => d[\"y\"])[index],\r\n              },\r\n            ])\r\n          }\r\n        />\r\n        <Crosshair values={crosshairValues} />\r\n      </XYPlot>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NumberLineChart;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  VerticalGridLines,\r\n  HorizontalGridLines,\r\n  Crosshair,\r\n  VerticalRectSeries,\r\n  WhiskerSeries,\r\n  LabelSeries,\r\n} from \"react-vis\";\r\n\r\nfunction BoxAndWhiskerPlot(props) {\r\n  const [crosshairValues, setCrosshairValues] = useState([]);\r\n\r\n  //Accept an array with x Labels, and a list of y values per label, Make it easier to type\r\n  const rawdata = props.data;\r\n  const totalLabels = rawdata.length;\r\n\r\n  //Define bar thickness and the seperation between each bar. Also define median thickness. Also monitor the max value in order to manage yDomain\r\n  const barThickness = 3.5;\r\n  const seperation = barThickness / 3;\r\n  const medianThicknessHalf = 0.1;\r\n  var plotMaxY = 0;\r\n\r\n  var tX = seperation;\r\n  var MainRectSeriesArray = [];\r\n  var WhiskerSeriesArray = [];\r\n  var MedianRectSeriesArray = [];\r\n  var LabelSeriesArray = [];\r\n  for (let i = 0; i < totalLabels; i++) {\r\n    var newX = tX + barThickness;\r\n\r\n    //Prepare data for the main RectSeries\r\n    var workingList = rawdata[i][\"y\"].sort((a, b) => a - b);\r\n    var workingListLength = workingList.length;\r\n    var medianIndex = workingListLength / 2;\r\n\r\n    if (medianIndex % 2 !== 0) {\r\n      var upperLimit = medianIndex - 0.5;\r\n      var lowerLimit = medianIndex + 0.5;\r\n    } else {\r\n      var upperLimit = medianIndex;\r\n      var lowerLimit = medianIndex;\r\n    }\r\n    var lowerHalf = workingList.slice(0, upperLimit + 1);\r\n    var upperHalf = workingList.slice(lowerLimit, workingListLength);\r\n\r\n    function findMedian(ar) {\r\n      var halfLocation = ar.length / 2;\r\n      if (halfLocation % 1 !== 0) {\r\n        var median = ar[halfLocation - 0.5];\r\n      } else {\r\n        var median = (ar[halfLocation - 1] + ar[halfLocation]) / 2;\r\n      }\r\n      return median;\r\n    }\r\n\r\n    var lowerQuartile = findMedian(lowerHalf);\r\n    var upperQuartile = findMedian(upperHalf);\r\n\r\n    //Prepare data for WhiskerSeries. Also update maxYvalue for yDomain\r\n    var minValue = workingList[0];\r\n    var maxValue = workingList[workingListLength - 1];\r\n    var whiskerlocation = (minValue + maxValue) / 2;\r\n    var whiskerVariance = (whiskerlocation - minValue) * 2;\r\n    if (maxValue > plotMaxY) {\r\n      plotMaxY = maxValue;\r\n    }\r\n\r\n    //Prepare data for the median's RectSeries\r\n    var overallMedian = findMedian(workingList);\r\n\r\n    //Push coordinates\r\n    MainRectSeriesArray.push({\r\n      x0: tX,\r\n      x: newX,\r\n      y0: lowerQuartile,\r\n      y: upperQuartile,\r\n    });\r\n    WhiskerSeriesArray.push({\r\n      x: (tX + newX) / 2,\r\n      y: whiskerlocation,\r\n      yVariance: whiskerVariance,\r\n    });\r\n    MedianRectSeriesArray.push({\r\n      x0: tX,\r\n      x: newX,\r\n      y0: overallMedian - medianThicknessHalf,\r\n      y: overallMedian + medianThicknessHalf,\r\n      median: overallMedian,\r\n    });\r\n    LabelSeriesArray.push({\r\n      x: (tX + newX) / 2,\r\n      y: -5.5,\r\n      label: rawdata[i][\"x\"],\r\n      style: { fontSize: 10 },\r\n    });\r\n\r\n    tX = newX + seperation;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <XYPlot\r\n        height={300}\r\n        width={totalLabels * (barThickness * 16.5)}\r\n        xDomain={[0, totalLabels * (barThickness * 1.35) + seperation * 1.1]}\r\n        yDomain={[0, plotMaxY * 1.1]}\r\n        onMouseLeave={() => setCrosshairValues([])}\r\n      >\r\n        <VerticalGridLines />\r\n        <HorizontalGridLines />\r\n        <XAxis hideTicks />\r\n        <YAxis />\r\n        <LabelSeries data={LabelSeriesArray} labelAnchorX={\"middle\"} />\r\n        <VerticalRectSeries\r\n          data={MainRectSeriesArray}\r\n          onNearestX={(value, { index }) =>\r\n            setCrosshairValues([\r\n              {\r\n                x: LabelSeriesArray.map((d) => d[\"label\"])[index],\r\n                y: MedianRectSeriesArray.map((d) => d[\"median\"])[index],\r\n              },\r\n            ])\r\n          }\r\n        />\r\n        <VerticalRectSeries color={\"#164b80\"} data={MedianRectSeriesArray} />\r\n        <WhiskerSeries\r\n          className=\"whisker-series-example\"\r\n          data={WhiskerSeriesArray}\r\n          color={\"#164b80\"}\r\n        />\r\n        <Crosshair values={crosshairValues} />\r\n      </XYPlot>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BoxAndWhiskerPlot;\r\n","import React from \"react\";\r\nimport { RadialChart } from \"react-vis\";\r\n\r\nfunction PieChart(props) {\r\n  return (\r\n    <div>\r\n      <RadialChart data={props.data} width={300} height={300} className />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PieChart;\r\n","// Example Data\r\n\r\nconst data_example_line = [\r\n  { x: 0, y: 8 },\r\n  { x: 1, y: 5 },\r\n  { x: 2, y: 4 },\r\n  { x: 3, y: 9 },\r\n  { x: 4, y: 1 },\r\n  { x: 5, y: 7 },\r\n  { x: 6, y: 6 },\r\n  { x: 7, y: 3 },\r\n  { x: 8, y: 2 },\r\n  { x: 9, y: 0 },\r\n];\r\n\r\nconst data_example_weighted_scatterplot = [\r\n  { x: 1, y: 10, size: 15 },\r\n  { x: 1.7, y: 12, size: 10 },\r\n  { x: 2, y: 5, size: 1 },\r\n  { x: 3, y: 15, size: 12 },\r\n  { x: 2.5, y: 10, size: 2 },\r\n  { x: 3.5, y: 7, size: 4 },\r\n  { x: 4.5, y: 8, size: 25 },\r\n  { x: 5.5, y: 7, size: 23 },\r\n];\r\n\r\nconst data_example_vertical_bar = [\r\n  { x: 1, y: 10 },\r\n  { x: 2, y: 5 },\r\n  { x: 3, y: 15 },\r\n];\r\n\r\nconst data_example_horizontal_bar = [\r\n  { y: 1, x: 3 },\r\n  { y: 2, x: 7 },\r\n  { y: 3, x: 10 },\r\n  { y: 4, x: 9 },\r\n  { y: 5, x: 15 },\r\n];\r\n\r\nconst data_example_vertical_multibar = [\r\n  [\r\n    { x: 1, y: 10 },\r\n    { x: 2, y: 5 },\r\n    { x: 3, y: 15 },\r\n  ],\r\n  [\r\n    { x: 1, y: 12 },\r\n    { x: 2, y: 2 },\r\n    { x: 3, y: 11 },\r\n  ],\r\n];\r\n\r\nconst data_example_horizontal_multibar = [\r\n  [\r\n    { y: 1, x: 10 },\r\n    { y: 2, x: 5 },\r\n    { y: 3, x: 15 },\r\n  ],\r\n  [\r\n    { y: 1, x: 12 },\r\n    { y: 2, x: 2 },\r\n    { y: 3, x: 11 },\r\n  ],\r\n];\r\n\r\nconst data_example_numberlinechart = [\r\n  { x: \"Blue\", y: 10 },\r\n  { x: \"Grey\", y: 20 },\r\n  { x: \"Red\", y: 30 },\r\n];\r\n\r\nconst data_example_box_and_whisker_plot = [\r\n  { x: \"Red\", y: [5, 10, 32, 17, 18, 20, 16] },\r\n  { x: \"Green\", y: [3, 8, 12, 29, 34, 42, 43, 50, 61, 75] },\r\n  { x: \"Blue\", y: [5, 10, 16, 17, 18, 20, 32] },\r\n  { x: \"Orange\", y: [5, 10, 16, 17, 18, 20, 32] },\r\n];\r\n\r\nconst data_example_pie_chart = [\r\n  { angle: 1, className: \"Example1\", label: \"Example1\" },\r\n  { angle: 5, className: \"Example2\", label: \"Example2\" },\r\n  { angle: 2, className: \"Example3\", label: \"Example3\" },\r\n]; //no inbuilt functions in react-vis for crosshair in RadialChart, have to figure out how to do that separately\r\n\r\n// Actual Survey Result Data\r\n\r\nexport {\r\n  data_example_line,\r\n  data_example_vertical_bar,\r\n  data_example_horizontal_bar,\r\n  data_example_vertical_multibar,\r\n  data_example_horizontal_multibar,\r\n  data_example_weighted_scatterplot,\r\n  data_example_numberlinechart,\r\n  data_example_box_and_whisker_plot,\r\n  data_example_pie_chart,\r\n};\r\n","import React from \"react\";\r\nimport LineChart from \"../charts/LineChart\";\r\nimport VerticalBarChart from \"../charts/VerticalBarChart\";\r\nimport HorizontalBarChart from \"../charts/HorizontalBarChart\";\r\nimport VerticalMultiBarChart from \"../charts/VerticalMultiBarChart\";\r\nimport HorizontalMultiBarChart from \"../charts/HorizontalMultiBarChart\";\r\nimport WeightedScatterPlot from \"../charts/WeightedScatterPlot\";\r\nimport NumberLineChart from \"../charts/NumberLineChart\";\r\nimport BoxAndWhiskerPlot from \"../charts/BoxAndWhiskerPlot\";\r\nimport PieChart from \"../charts/PieChart\";\r\n\r\nimport {\r\n  data_example_line,\r\n  data_example_vertical_bar,\r\n  data_example_horizontal_bar,\r\n  data_example_vertical_multibar,\r\n  data_example_horizontal_multibar,\r\n  data_example_weighted_scatterplot,\r\n  data_example_numberlinechart,\r\n  data_example_box_and_whisker_plot,\r\n  data_example_pie_chart,\r\n} from \"../data\";\r\n\r\nfunction AboutPage() {\r\n  return (\r\n    <div>\r\n      About Page\r\n      <p>UW SE 26 Class Profile</p>\r\n      <LineChart data={data_example_line} />\r\n      <VerticalBarChart data={data_example_vertical_bar} />\r\n      <HorizontalBarChart data={data_example_horizontal_bar} />\r\n      <VerticalMultiBarChart data={data_example_vertical_multibar} />\r\n      <HorizontalMultiBarChart data={data_example_horizontal_multibar} />\r\n      <WeightedScatterPlot data={data_example_weighted_scatterplot} />\r\n      <NumberLineChart data={data_example_numberlinechart} />\r\n      <BoxAndWhiskerPlot data={data_example_box_and_whisker_plot} />\r\n      <PieChart data={data_example_pie_chart} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutPage;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../styling/Header.css';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className={'main_header'}>\r\n            <h3>SE 2026 Profile</h3>\r\n            <div class={'spacer'} />\r\n            {['About', 'Demographics', 'Academics', 'Housing', 'Sex/Drugs', 'Misc'].map((page, i) => \r\n                <NavLink\r\n                    to={`/class-profile/${page.toLowerCase().replace('/', '-')}`}\r\n                    activeClassName={'active'}\r\n                    className={'link'}\r\n                >\r\n                    {page}\r\n                </NavLink>\r\n            )}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction DemographicsPage() {\r\n  return (\r\n    <div>\r\n      <p>Demographics Page</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DemographicsPage;\r\n","import React from \"react\";\r\n\r\nfunction HousingPage() {\r\n  return (\r\n    <div>\r\n      <p>Housing Page</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HousingPage;\r\n","import React from \"react\";\r\n\r\nfunction SexDrugsPage() {\r\n  return (\r\n    <div>\r\n      <p>Sex/Drugs Page</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SexDrugsPage;\r\n","import React from \"react\";\r\n\r\nfunction AcademicsPage() {\r\n  return (\r\n    <div>\r\n      <p>Academics Page</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AcademicsPage;\r\n","import React from \"react\";\r\n\r\nfunction MiscPage() {\r\n  return (\r\n    <div>\r\n      <p>Miscellaneous Page</p>\r\n      Data that doesn't really fit into the other categories will go here.\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MiscPage;\r\n","import \"./App.css\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport AboutPage from \"./pages/AboutPage\";\r\nimport Header from \"./components/Header\";\r\nimport DemographicsPage from \"./pages/DemographicsPage\";\r\nimport HousingPage from \"./pages/HousingPage\";\r\nimport SexDrugsPage from \"./pages/SexDrugsPage\";\r\nimport AcademicsPage from \"./pages/AcademicsPage\";\r\nimport MiscPage from \"./pages/MiscPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path={[\"/class-profile/about\", \"/class-profile\"]}>\r\n            <AboutPage />\r\n          </Route>\r\n          <Route exact path=\"/class-profile/academics\">\r\n            <AcademicsPage />\r\n          </Route>\r\n          <Route exact path=\"/class-profile/demographics\">\r\n            <DemographicsPage />\r\n          </Route>\r\n          <Route exact path=\"/class-profile/sex-drugs\">\r\n            <SexDrugsPage />\r\n          </Route>\r\n          <Route exact path=\"/class-profile/housing\">\r\n            <HousingPage />\r\n          </Route>\r\n          <Route exact path=\"/class-profile/misc\">\r\n            <MiscPage />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}