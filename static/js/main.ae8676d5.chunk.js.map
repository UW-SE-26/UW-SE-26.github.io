{"version":3,"sources":["logo.svg","charts/ExampleBarChart.js","charts/ExampleLineChart.js","data.js","pages/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["ExampleBarChart","props","useState","crosshairValues","setCrosshairValues","height","width","xType","onMouseLeave","data","onNearestX","value","index","map","d","values","ExampleLineChart","data_example_line","x","y","data_example_bar","MainPage","App","className","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAAe,I,0CCiCAA,MAtBf,SAAyBC,GAAQ,IAAD,EACgBC,mBAAS,IADzB,mBACvBC,EADuB,KACNC,EADM,KAG9B,OACE,8BACE,eAAC,IAAD,CACEC,OAAQ,IACRC,MAAO,IACPC,MAAM,UACNC,aAAc,kBAAMJ,EAAmB,KAJzC,UAME,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAmBK,KAAMR,EAAMQ,KAAMC,WAAY,SAACC,EAAD,OAASC,EAAT,EAASA,MAAT,OAAoBR,EAAmB,CAAC,CAAC,EAAKH,EAAMQ,KAAKI,KAAI,SAAAC,GAAC,OAAIA,EAAC,KAAOF,GAAQ,EAAKX,EAAMQ,KAAKI,KAAI,SAAAC,GAAC,OAAIA,EAAC,KAAOF,SACpK,cAAC,IAAD,CAAWG,OAAQZ,UCCZa,MAjBf,SAA0Bf,GAAQ,IAAD,EACeC,mBAAS,IADxB,mBACxBC,EADwB,KACPC,EADO,KAG/B,OACE,8BACE,eAAC,IAAD,CAAQC,OAAQ,IAAKC,MAAO,IAAKE,aAAc,kBAAMJ,EAAmB,KAAxE,UACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAYK,KAAMR,EAAMQ,KAAMC,WAAY,SAACC,EAAD,OAASC,EAAT,EAASA,MAAT,OAAoBR,EAAmB,CAAC,CAAC,EAAKH,EAAMQ,KAAKI,KAAI,SAAAC,GAAC,OAAIA,EAAC,KAAOF,GAAQ,EAAKX,EAAMQ,KAAKI,KAAI,SAAAC,GAAC,OAAIA,EAAC,KAAOF,SAC7J,cAAC,IAAD,CAAWG,OAAQZ,UCtBrBc,EAAoB,CACxB,CAAEC,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,IAGPC,EAAmB,CACvB,CAAEF,EAAG,OAAQC,EAAG,GAChB,CAAED,EAAG,OAAQC,EAAG,GAChB,CAAED,EAAG,OAAQC,EAAG,IAChB,CAAED,EAAG,OAAQC,EAAG,GAChB,CAAED,EAAG,OAAQC,EAAG,KCHHE,MAVf,WACE,OACE,gCACE,uDACA,cAAC,EAAD,CAAiBZ,KAAMW,IACvB,cAAC,EAAD,CAAkBX,KAAMQ,QCSfK,MAdf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,iBAAlB,SACE,cAAC,EAAD,aCCGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ae8676d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from \"react\";\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  VerticalGridLines,\n  HorizontalGridLines,\n  Crosshair,\n  VerticalBarSeries,\n} from \"react-vis\";\n\nfunction ExampleBarChart(props) {\n  const [crosshairValues, setCrosshairValues] = useState([]);\n\n  return (\n    <div>\n      <XYPlot\n        height={300}\n        width={300}\n        xType=\"ordinal\"\n        onMouseLeave={() => setCrosshairValues([])}\n      >\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis />\n        <YAxis />\n        <VerticalBarSeries data={props.data} onNearestX={(value, {index}) => setCrosshairValues([{\"x\": props.data.map(d => d[\"x\"])[index], \"y\": props.data.map(d => d[\"y\"])[index]}])} />\n        <Crosshair values={crosshairValues} />\n      </XYPlot>\n    </div>\n  );\n}\n\nexport default ExampleBarChart;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  VerticalGridLines,\n  HorizontalGridLines,\n  Crosshair,\n  LineSeries,\n} from \"react-vis\";\n\nfunction ExampleLineChart(props) {\n  const [crosshairValues, setCrosshairValues] = useState([]);\n\n  return (\n    <div>\n      <XYPlot height={300} width={300} onMouseLeave={() => setCrosshairValues([])}>\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis />\n        <YAxis />\n        <LineSeries data={props.data} onNearestX={(value, {index}) => setCrosshairValues([{\"x\": props.data.map(d => d[\"x\"])[index], \"y\": props.data.map(d => d[\"y\"])[index]}])} />\n        <Crosshair values={crosshairValues} />\n      </XYPlot>\n    </div>\n  );\n}\n\nexport default ExampleLineChart;\n","const data_example_line = [\n  { x: 0, y: 8 },\n  { x: 1, y: 5 },\n  { x: 2, y: 4 },\n  { x: 3, y: 9 },\n  { x: 4, y: 1 },\n  { x: 5, y: 7 },\n  { x: 6, y: 6 },\n  { x: 7, y: 3 },\n  { x: 8, y: 2 },\n  { x: 9, y: 0 },\n];\n\nconst data_example_bar = [\n  { x: \"2017\", y: 3 },\n  { x: \"2018\", y: 7 },\n  { x: \"2019\", y: 10 },\n  { x: \"2020\", y: 9 },\n  { x: \"2021\", y: 15 },\n];\n\nexport { data_example_line, data_example_bar };\n","import React from \"react\";\nimport ExampleBarChart from \"../charts/ExampleBarChart\"\nimport ExampleLineChart from \"../charts/ExampleLineChart\"\nimport { data_example_bar, data_example_line } from \"../data\"\n\nfunction MainPage() {\n  return (\n    <div>\n      <p>UW SE 26 Class Profile</p>\n      <ExampleBarChart data={data_example_bar} />\n      <ExampleLineChart data={data_example_line} />\n    </div>\n  );\n}\n\nexport default MainPage;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport MainPage from \"./pages/MainPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/class-profile\">\n            <MainPage />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}